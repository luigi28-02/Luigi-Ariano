<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Plant Eaters</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Neuton:wght@200;300&display=swap" rel="stylesheet">
    <meta charset="utf-8">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="../public/css/card.css">
    <link rel="stylesheet" href="../public/css/nav.css">
</head>
<style>
    body {
        font-family: 'Neuton', serif;
        font-weight: bold;
    }


</style>



<body class="fullscreen">

<a href='/login/myprofile'><img class="mb-4 img-fluid mx-auto d-block" src="../public/image/heart.png" alt="" width="150" height="150"></a>
<h1 class="title">Plant Eaters</h1>

<div class="main">
    <!-- Actual search box -->

    <div class="form-group has-search">
        <span class="fa fa-search form-control-feedback"></span>
        <input type="text" class="form-control" placeholder="Search">
    </div>
    <div id="activityContainer"></div>
    <div class="card" style="width: 25rem;">
        <img src="../public/image/esempio.jpg" class="card-img-top" alt="...">
        <div class="card-body">
            <p class="card-text">Stai cercando Hamburger e Panini a domicilio? Con Burger's Bró - Hamburgeria De Blasio di Napoli non hai più bisogno di cercare. Vai al suo menù su Just Eat e fai il tuo ordine ora.</p>
            <a href="https://www.google.com/maps/dir//Burger's+bro',+Via+San+Maria+Ai+Monti,+Napoli,+NA/@40.8731819,14.2236722,13z/data=!4m8!4m7!1m0!1m5!1m1!1s0x133b07e0599904d9:0xc5c32f6ed1602191!2m2!1d14.2648599!2d40.873121?hl=it&entry=ttu" target="_blank">Cercaci su google maps</a>
        </div>
    </div>

    <div class="card" style="width: 25rem;">
        <img src="../public/image/esempio.jpg" class="card-img-top" alt="...">
        <div class="card-body">
            <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
        </div>
    </div>
    <div class="card" style="width: 25rem;">
        <img src="../public/image/esempio.jpg" class="card-img-top" alt="...">
        <div class="card-body">
            <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
        </div>
    </div>
    <div class="card" style="width: 25rem;">
        <img src="../public/image/esempio.jpg" class="card-img-top" alt="...">
        <div class="card-body">
            <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
        </div>
    </div>
    <br> <br> <br> <br>

    <nav class="navbar fixed-bottom navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand left" href="../public/Mappa.html"><svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-geo-alt-fill" viewBox="0 0 16 16">
                    <path d="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6z"/>
                </svg></a>

            <a class="navbar-brand" href="#"><svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
                </svg></a>
            <a class="navbar-brand right" href="/login/myprofile"><svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-person-fill" viewBox="0 0 16 16">
                    <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3Zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z"/>
                </svg></a>
        </div>
    </nav>
</div>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        console.log("sono entrato");
        if ('geolocation' in navigator) {
            console.log("log in geolocation");
            navigator.geolocation.getCurrentPosition(
                (position) => {
                    console.log("In get current position");
                    const userLocation = {
                        latitude: parseFloat(position.coords.latitude),
                        longitude: parseFloat(position.coords.longitude)
                    };
                    console.log("Prima di fetch con i seguenti valori: longitude" + userLocation.longitude + " latitude: " +userLocation.latitude);
                    // Esegui la richiesta POST automaticamente al caricamento della pagina

                    fetch('/login/search', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(userLocation) // Sostituisci con i dati iniziali dell'utente, se disponibili
                    })
                        .then(response => response.json())
                        .then(data => {
                            const activityContainer = document.getElementById('activityContainer');

                            // Pulisci il contenuto del contenitore
                            activityContainer.innerHTML = '';

                            // Verifica se ci sono dati
                            if (data && data.length > 0) {
                                // Itera su ogni attività e mostra le informazioni
                                data.forEach(attivita => {
                                    const attivitas=attivita.attivita;
                                    let distance=attivita.distanza;
                                    distance=distance/1000;
                                    console.log(distance);
                                    const cardDiv = document.createElement('div');
                                    cardDiv.className = 'card';
                                    cardDiv.style.width = '25rem';

                                    const link = document.createElement('a');
                                    link.href = `/login/search/${attivitas._id}`;

                                    const img = document.createElement('img');
                                    img.src = `../${attivitas.imagePath}`;
                                    img.className = 'card-img-top';
                                    img.alt = '...';

                                    const cardBodyDiv = document.createElement('div');
                                    cardBodyDiv.className = 'card-body';

                                    const nameParagraph = document.createElement('p');
                                    nameParagraph.className = 'card-text';
                                    nameParagraph.textContent = attivitas.name;
                                    const distanceParagraph = document.createElement('p');
                                    distanceParagraph.className = 'card-text';
                                    distanceParagraph.textContent = distance + "km ";
                                    const addressParagraph = document.createElement('p');
                                    addressParagraph.className = 'card-text';
                                    addressParagraph.textContent = attivitas.address;

                                    const categoryParagraph = document.createElement('p');
                                    categoryParagraph.className = 'card-text';
                                    categoryParagraph.innerHTML = `${attivitas.category} <span>vote: <span>${attivitas.finalrating}</span></span>`;

                                    const descriptionParagraph = document.createElement('p');
                                    descriptionParagraph.className = 'card-text';
                                    descriptionParagraph.textContent = attivitas.description;

                                    // Aggiungi gli elementi al DOM
                                    link.appendChild(img);
                                    cardBodyDiv.appendChild(nameParagraph);
                                    cardBodyDiv.appendChild(distanceParagraph);
                                    cardBodyDiv.appendChild(addressParagraph);
                                    cardBodyDiv.appendChild(categoryParagraph);
                                    cardBodyDiv.appendChild(descriptionParagraph);

                                    cardDiv.appendChild(link);
                                    cardDiv.appendChild(cardBodyDiv);

                                    activityContainer.appendChild(cardDiv);
                                });
                            } else {
                                // Se non ci sono dati, mostra un messaggio
                                activityContainer.innerHTML = '<h1>Nessuna attività trovata</h1>';
                            }
                        })
                        .catch(error => {
                            console.error('Errore durante la richiesta POST:', error);
                        });

                },
                (error) => {
                    console.log('Errore durante il recupero della posizione:', error);
                }
            );
        } else {
            console.error('La geolocalizzazione non è supportata dal tuo browser.');
        }
    });

    // Chiamata AJAX per la richiesta POST all'avvio dell'applicazione

</script>
</body>
</html>